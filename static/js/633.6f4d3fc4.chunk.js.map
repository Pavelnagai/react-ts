{"version":3,"file":"static/js/633.6f4d3fc4.chunk.js","mappings":"oPAWMA,GAAcC,EAAAA,EAAAA,GAAU,IAsBjBC,GAAiBC,EAAAA,EAAAA,GAAwB,CAClDC,KAAM,SADoBD,EArB+B,SAACE,GAC1D,OACI,kBAAMC,SAAUD,EAAME,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,YAAa,QAASC,KAAM,QAASC,UAAWC,EAAAA,GAAOC,SAAU,CAACC,EAAAA,EAAUd,QAEvF,0BACI,SAACQ,EAAA,EAAD,CAAOC,YAAa,WAAYC,KAAM,WAAYK,KAAM,WAAYJ,UAAWC,EAAAA,GACxEC,SAAU,CAACC,EAAAA,EAAUd,QAEhC,0BACI,SAACQ,EAAA,EAAD,CAAOE,KAAM,aAAcK,KAAM,WAAYJ,UAAWC,EAAAA,OAE3DP,EAAMW,QAAS,gBAAKC,UAAWC,EAAAA,EAAAA,iBAAhB,SACXb,EAAMW,SAEX,4CCDZ,GAAeG,EAAAA,EAAAA,KALS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,UAGa,CAACE,MAAAA,EAAAA,IAAzC,EAnBc,SAAClB,GAIX,OAAIA,EAAMgB,QACC,SAAC,KAAD,CAAUG,GAAI,cAGrB,4BACI,mCACA,SAACtB,EAAD,CAAgBI,SATP,SAACmB,GACdpB,EAAMkB,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","sources":["components/Login/LoginForm.tsx","components/Login/Login.tsx"],"sourcesContent":["import {maxLength, required} from \"../../utilits/validators/validators\";\nimport React from \"react\";\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormControls/FormControls\";\nimport style from \"../common/FormControls/FormControls.module.css\";\n\nexport type FormDataType = {\n    email: string,\n    password: string,\n    rememberMe: boolean\n}\nconst maxLength30 = maxLength(30)\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field placeholder={'Email'} name={'email'} component={Input} validate={[required, maxLength30]}/>\n            </div>\n            <div>\n                <Field placeholder={'Password'} name={'password'} type={'password'} component={Input}\n                       validate={[required, maxLength30]}/>\n            </div>\n            <div>\n                <Field name={'rememberMe'} type={'checkbox'} component={Input}/>\n            </div>\n            {props.error && <div className={style.formSummaryError}>\n                {props.error}\n            </div>}\n            <button>login</button>\n        </form>\n    )\n}\n\nexport const LoginReduxForm = reduxForm<FormDataType>({\n    form: 'Email'\n})(LoginForm)","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {AppStateType} from \"../../redux/store-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {FormDataType, LoginReduxForm} from './LoginForm';\n\n\nconst Login = (props: any) => {\n    const onSubmit = (formData: FormDataType) => {\n        props.login(formData.email, formData.password, formData.rememberMe)\n    }\n    if (props.isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    );\n};\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n}\nexport default connect(mapStateToProps, {login})(Login);"],"names":["maxLength30","maxLength","LoginReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","placeholder","name","component","Input","validate","required","type","error","className","style","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"sourceRoot":""}